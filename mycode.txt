from selenium.webdriver.support.ui import WebDriverWait, Select
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
import time

# Step 1: Select "ÈÄêÊó•ÁõØÂ∏Ç" (Mark-to-Market)
select_element = Select(driver.find_element(By.NAME, "byType"))
select_element.select_by_value("date")  # or .select_by_index(0)

# Step 2: Click the submit button (Êèê‰∫§)
submit_button = driver.find_element(By.CSS_SELECTOR, "input.button[value='Êèê‰∫§']")
submit_button.click()

# Step 3: Wait for the "‰∏ãËΩΩ" (Download) link and click it
wait = WebDriverWait(driver, 10)
download_link = wait.until(EC.element_to_be_clickable((By.ID, "myDownload")))
download_link.click()
print("‚úÖ Download clicked.")

# Step 4: Wait a moment for download to start
time.sleep(2)  # Adjust if needed

# Step 5: Click the logout button ("ÈÄÄÂá∫Á≥ªÁªü")
logout_button = driver.find_element(By.CSS_SELECTOR, "input.button[name='logout']")
logout_button.click()
print("üëã Logged out successfully.")
----------------------------------
import os
import pandas as pd
from openpyxl import Workbook

def combine_excel_files_to_one(folder_path, output_file):
    writer = pd.ExcelWriter(output_file, engine='openpyxl')
    sheet_names = []

    # Iterate over all Excel files in the folder
    for filename in os.listdir(folder_path):
        if filename.endswith(".xlsx") or filename.endswith(".xls"):
            file_path = os.path.join(folder_path, filename)
            sheet_name = os.path.splitext(filename)[0][:31]  # Sheet name max length is 31 chars
            sheet_names.append(sheet_name)
            
            try:
                df = pd.read_excel(file_path)
                df.to_excel(writer, sheet_name=sheet_name, index=False)
            except Exception as e:
                print(f"Failed to read {filename}: {e}")

    # Create the Main sheet with list of sheet names
    main_df = pd.DataFrame(sheet_names, columns=["Sheet Names"])
    main_df.to_excel(writer, sheet_name='Main', index=False)

    writer.close()
    print(f"Combined Excel saved to {output_file}")

# Example usage
combine_excel_files_to_one("path/to/your/folder", "combined_output.xlsx")
